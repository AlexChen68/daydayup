<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 属性配置 -->
    <properties resource="application.yml">
        <property name="property" value="propertyValue"/>
    </properties>

    <!-- mybatis 设置 -->
    <settings>
        <!-- 指定日志框架 -->
        <setting name="logImpl" value="SLF4J"/>
        <!-- 全局性地开启或关闭所有映射器配置文件中已配置的任何缓存 -->
        <setting name="cacheEnabled" value="true"/>
        <!-- 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置 fetchType 属性来覆盖该项的开关状态 -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!-- 是否允许单个语句返回多结果集（需要数据库驱动支持） -->
        <setting name="multipleResultSetsEnabled" value="true"/>
        <!-- 指定 MyBatis 应如何自动映射列到字段或属性。 NONE 表示关闭自动映射；PARTIAL 只会自动映射没有定义嵌套结果映射的字段。 FULL 会自动映射任何复杂的结果集（无论是否嵌套） -->
        <setting name="autoMappingBehavior" value="PARTIAL"/>
        <!-- 指定发现自动映射目标未知列（或未知属性类型）的行为 -->
        <setting name="autoMappingUnknownColumnBehavior" value="WARNING"/>
        <!-- 为驱动的结果集获取数量（fetchSize）设置一个建议值，此参数只可以在查询设置中被覆盖 -->
        <setting name="defaultFetchSize" value="100"/>
        <!-- 是否开启驼峰命名自动映射，即从经典数据库列名 A_COLUMN 映射到经典 Java 属性名 aColumn -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!-- MyBatis 利用本地缓存机制（Local Cache）防止循环引用和加速重复的嵌套查询。
            默认值为 SESSION，会缓存一个会话中执行的所有查询。
            若设置值为 STATEMENT，本地缓存将仅用于执行语句，对相同 SqlSession 的不同查询将不会进行缓存 -->
        <setting name="localCacheScope" value="SESSION"/>
    </settings>

    <!-- 类型别名 -->
    <typeAliases>
        <typeAlias alias="User" type="tech.alexchen.mybatis.entity.SysUser"/>
        <typeAlias alias="Integer" type="java.lang.Integer"/>
        <typeAlias alias="Long" type="java.lang.Long"/>
        <typeAlias alias="HashMap" type="java.util.HashMap"/>
        <typeAlias alias="LinkedHashMap" type="java.util.LinkedHashMap"/>
        <typeAlias alias="ArrayList" type="java.util.ArrayList"/>
        <typeAlias alias="LinkedList" type="java.util.LinkedList"/>
    </typeAliases>

    <!-- 类型处理器 -->
    <typeHandlers>
        <typeHandler handler="tech.alexchen.mybatis.config.StringTypeHandler"/>
    </typeHandlers>

    <!-- 对象工厂 -->
    <objectFactory type="tech.alexchen.mybatis.config.SysUserObjectFactory">
        <property name="someProperty" value="100"/>
    </objectFactory>

    <!-- 插件 -->
    <plugins>
        <plugin interceptor="tech.alexchen.mybatis.config.MyPlugin">
            <property name="someProperty" value="100"/>
        </plugin>
        <!-- com.github.pagehelper为PageHelper类所在包名 -->
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <!-- 使用下面的方式配置参数，后面会有所有的参数介绍 -->
            <property name="param1" value="value1"/>
        </plugin>
    </plugins>

    <!-- 环境配置 -->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC">
                <!-- 跳过连接关闭时自动提交事务 -->
                <property name="skipSetAutoCommitOnClose" value="false"/>
            </transactionManager>
            <!-- 如果一个属性在不只一个地方进行了配置，那么，MyBatis 将按照下面的顺序来加载： -->
            <!-- 1. 首先读取在 properties 元素体内指定的属性。 -->
            <!-- 2. 然后根据 properties 元素中的 resource 属性读取类路径下属性文件，或根据 url 属性指定的路径读取属性文件，并覆盖之前读取过的同名属性。 -->
            <!-- 3. 最后读取作为方法参数传递的属性，并覆盖之前读取过的同名属性。 -->
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- mapper文件 -->
    <mappers>
        <!-- 使用相对于类路径的资源引用 -->
        <mapper resource="mapper/SysUserMapper.xml"/>
        <!-- 使用映射器接口实现类的完全限定类名 -->
        <!-- <mapper class="tech.alexchen.mybatis.mapper.SysUserMapper"/> -->
        <!-- 将包内的映射器接口实现全部注册为映射器 -->
        <!-- <package name="tech.alexchen.mybatis.mapper"/> -->
    </mappers>
</configuration>
