server:
  port: 8080

spring:
#  sql:
#    init:
#      data-locations: classpath:schema.sql
#      mode: always
  shardingsphere:
    datasource:
      names: db0,db1
      db0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/daydayup_0?useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
      db1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/daydayup_1?useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
    # 分片配置
    sharding:
      tables:
        # 逻辑表名称
        orders:
          # 由数据源名 + 表名组成（参考 Inline 语法规则）
          actualDataNodes: db0.orders_$->{[0,2,4,6]}, db1.orders_$->{[1,3,5,7]}
          # 主键生成策略
          key-generator:
            column: id
            type: SNOWFLAKE
          # 分库策略，缺省表示使用默认分库策略，以下的分片策略只能选其一
          database-strategy:
            inline:
              algorithm-expression: db$->{user_id % 2}
              sharding-column: user_id
          # 分表策略，同分库策略
          table-strategy:
            inline:
              algorithm-expression: orders_$->{user_id % 8}
              sharding-column: user_id
        order_config:
          actualDataNodes: db0.order_config
    props:
      sql:
        show: true